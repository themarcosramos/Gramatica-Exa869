!
! Propriedades
!

"Name"    = 'Problema 2'
"Version" = '1.0'
"Author"  = 'Gabriel, Gustavo, Ianc, Marcos, Joimar, Victor, Leandro'

"Case Sensitive" = 'True'
                 
"Start Symbol"   = <Var>

{Id Head}        = {Letter} + [_]
{Id Tail}        = {Id Head} + {Digit}
          
{NoZeroNumber} = [123456789]




!Id = {Letter}({Letter}|'_'|{Digit})*
   
integerNumber = '-'?{Whitespace}*{Digit}{Digit}*
               
floatNumber = integerNumber'.'{Digit}+

StringLiteral = '"'({Letter} | {Whitespace} | '\' {Printable})* '"'

Id = {ID Head}{ID Tail}*


! -------------------------------------------------
!                          Comment Delimiters
! -------------------------------------------------

Comment Start = '/*'
Comment End = '*/'
Comment Line = '//'
             
! -------------------------------------------------
!                             All Elements
! -------------------------------------------------
   

<boolean> ::= 'true' | 'false'
<tipo> ::= 'int'|'float'|'bool'|'string'
!tamanho_vet_mat = '[' {NoZeroNumber} ']' | '[' {NoZeroNumber} ']' '[' {NoZeroNumber} ']'

       
           
!<PrimeiroSimbolo> ::= <DeclararVariavel><start><funcoes>


<Origem> ::= 'var'
           | 'const'   
                              
<Tipo>   ::= 'int'
           | 'float'
           | 'double'
           | 'String'
           | Id

<TiposLiteral> ::= integerNumber
                | floatNumber
                | StringLiteral
                | Id
!
! Uteis
!

<AcessarVariavel> ::= id <AcessarVariavelX> <AcessarVariavelX>

<numeroOuId> ::= integerNumber
              | Id



!==============================================
! Declaração de variáveis, constantes e structs
!==============================================

<Const> ::= 'const' '{' <Variaveis> '}'

<Var> ::= 'var' '{' <Variaveis> '}'

<Struct> ::= 'struct' Id <structX>
          
<Variaveis> ::= <Variavel> <VariaveisX> ';'
             
<Variavel> ::= <Tipo> <VariavelX>
            
<SerieIdentificadores> ::= Id <Atribuir> <SerieIdentificadoresX>
                                 
!----------------------------------------------------------------------------
! Estruturas auxiliares para a criacao de variaveis, constantes e structs
!-----------------------------------------------------------------------------
    <structX> ::= '{' <Variaveis> '}' 'typedef' id
               | 'extends' id '{' <Variaveis> '}' 'typedef' id
            
    <VariaveisX> ::= ',' <Variaveis>
                  | 

    <VariavelX> ::= <SerieIdentificadores>
                 | '[' <VariavelXX>

    <VariavelXX> ::= integerNumber <VariavelXXX>

    <VariavelXXX> ::= ']' <VariavelXXXX>

    <VariavelXXXX> ::= <SerieIdentificadores>
                | '[' integerNumber ']' <SerieIdentificadores>

    <Atribuir>::= '='  <TiposLiteral>
               |
                        
    <SerieIdentificadoresX> ::= ',' <SerieIdentificadores>              
                             |
                        
    <AcessarVariavelX> ::= '[' <numeroOuId> ']'
                        |
                        
!=============
! Função start
!=============
<Start> ::= 'start' <Block>

<Bloco> ::= 'aaaaaaa'
      
!====================
!Declaracao de funcao
!====================         

<Function> ::= 'function' <Tipo> '(' <Parametros> ')' '{'  <Bloco> '}'
            
!===========================
! Declaracao de Procedimento
!===========================

<Procedure> ::= 'procedure' '(' <Parametros> ')' '{' <Bloco_sem_retorno> '}'

!--------------------------
! Utilidade da declaracao de funcao e procedimentos
!---------------------------

<Parametros> ::= <Parametro><ParametroX>
              |
              
    <ParametrosX> ::= ',' <Parametros>
                   |

<Parametro> ::= <Tipo> Id
             
!FATORAR ISSO A ESQUERDA!!!!!!!!!!!
<Returno> ::= 'return' Id 
          | 'return' integerNumber 
          |  'return' floatNumber 
          | 'return' string 
          | 'return' <boolean>
        

!=============
! Print e Scan
!=============

<Print> ::= 'print' '(' StringLiteral<PrintX>
              
    <PrintX> ::= ',' <SerieIdentificadores> ')' ';'
              | ')' ';'
              
<Scan> ::= 'scan' '(' StringLiteral<PrintX>

!==============================================
! Operadores Relacionais, Lógicos e Aritméticos
!==============================================

<OperadoresRelacionais> ::= '!='
                         | '='<Igual>
                         | '<'<Igual>
                         | '>'<Igual>
                         
<Igual>::= '='
        |
        
<OperadoresLogicos> ::= '!'
                     | '&&'
                     | '||'
                     

<OperadoresAritmeticos> ::= '+'<Soma>
                         | '-' <Subtracao>
                         | '*'
                         | '/'
                         
<Soma>::= '+'
       |

<Subtracao>::= '-'
            |

!===========
! Comando if
!===========

<If> ::= 'if' '(' <LogicaOuRelacional> ')' 'then' '{' <Bloco> '}' <Else>
      
<Else>::= '{' <Bloco> '}'
       |

<LogicaOuRelacional> ::= <OperadoresRelacionais>
                      | <OperadoresLogicos>

!==============
! Comando while
!==============

<While> ::= 'while' '(' <LogicaOuRelacional> ')' '{' <Block> '}'

!===========
! 
!===========

! =========================
<Matriz> ::= 'a'
          
<DeclarouVariavel> ::= 'b'


!<Declaracao_Funcao>  ::= 'function' <Id_Funcao> '(' <Lista_Parametros> ')' '{'<instrucao> ';''}'
!                        | 'function' <Id_Funcao> '(' ')'  '{'<instrucao> ';''}'

!<Declaracao_Procedimento> ::= 'procedure' <Id_Proced> '('  <Lista_Parametros> ')' '{'<instrucao> ';''}'
!                        | 'procedure'<Id_Proced>  '(' ')' '{'<instrucao> ';''}'

<DeclaracoesGlobais> ::= <Declaracoes_variaveis>
                      |<Declaracao_constantes>
                      
<Declaracao_Inicio>     ::= 'start' '(' ')'<Comandos> 
                         
<instrucao>::= '{' <Comandos> '}'
            |'{' '}'
           
<Id_Funcao>::= <TipoPrimitivo> Identificador
            
<Id_Proced> ::= Identificador
             
<Lista_Parametros>   ::= <Parametro>
                   | <Parametro>','<Lista_Parametros> 
                   
<Parametro>::=  <Declaracoes_variaveis>
            |<Declaracao_constantes>
           

<Program>    ::= <lista_instrucao>
                
<lista_instrucao>::=  <Declaracoes_variaveis> 
                  | <Declaracao_constantes>
                  !| <Declaracao_Procedimento>
                  | <Declaracao_Inicio>  
                  !| <Declaracao_Funcao> 
                  | <Comandos>  
                  | <codigosPrimitivos>                          

!produção de comandos já adaptando as outras produções  que já estão na gramática  e usando  o que discutindo em sessão ,
! contudo ao fazer isso acho que tem   ambiguidde  tem com conferir ai?
<Comandos> ::= <ComandoIf> <Comando_Aux> | <ComandoWhile> <Comando_Aux>| <ComandoScan> <Comando_Aux> | <ComandoPrint> <Comando_Aux>  | 'return' <Expressao>';' <Comando_Aux>  | 
<comandosRetornos> ::= <ComandoIfRetornos> <comandosRetornos> | <ComandoWhileRetornos> <comandosRetornos> | <ComandoScan> <comandosRetornos> 
                    | <ComandoPrint> <comandosRetornos> |'return' <Expressao> ';' <comandosRetornos> | 
                    
<ComandoIf> ::= 'if' '(' <Expressao> ')' 'then' '{' <Comandos> '}' <ComandoElse>
<ComandoElse> ::= 'else' '{' <Comandos> '}' | 
<ComandoWhile> ::= 'while' '('<Expressao> ')' '{'  <Comandos> '}'
<ComandoIfRetornos> ::= 'if' '(' <Expressao> ')' 'then' '{' <comandosRetornos> '}' <ComandoElse>
<ComandoWhileRetornos> ::= 'while' '(' <Expressao> ')' '{' <comandosRetornos> '}'
<comandoScan> ::= 'scan' '('<ListaId>')' ';'
<comandoPrint> ::= 'print' '(' <ListaExepressao>')' ';' 
                   
<comandoArry> ::= '['integerNumber']' <Matriz> | '['id']' <Matriz>
               |<DeclarouVariavel> 
               
<comandoMatriz>::='['integerNumber']' <DeclarouVariavel>| '['id']' <DeclarouVariavel>
                  |<DeclarouVariavel> 
    

<Comando_Aux> ::= <Comandos> 
                       
<Expressao>::=<Expressao_Aritimetica> 
            |<Expressao_Boolean>
            |<Expressao_Multiplicao>
            |<Expressao_Divisao>
            |<Expressao_Incremento>
            |<Expressao_Decremento>
            
<Expressao_Aritimetica> ::= <Declaracoes_variaveis>'='<Declaracoes_variaveis> '+'<Declaracoes_variaveis> ';'
                         | <Declaracoes_variaveis>'='<Declaracoes_variaveis> '-'<Declaracoes_variaveis> ';'
                         | <Declaracoes_variaveis>'='<Declaracoes_variaveis> '-''('<Expressao_Multiplicao>')' ';'
                         | <Declaracoes_variaveis>'=''('<Expressao_Multiplicao>')''-'<Declaracoes_variaveis> ';' 
                         | <Declaracoes_variaveis>'=''('<Expressao_Multiplicao>')''+'<Declaracoes_variaveis> ';' 
                         | <Declaracoes_variaveis>'='<Declaracoes_variaveis> '+''('<Expressao_Multiplicao>')' ';'
                         | <Declaracoes_variaveis>'='<Declaracoes_variaveis> '-''('<Expressao_Divisao>')' ';'
                         | <Declaracoes_variaveis>'=''('<Expressao_Divisao>')''-'<Declaracoes_variaveis> ';' 
                         | <Declaracoes_variaveis>'=''('<Expressao_Divisao>')''+'<Declaracoes_variaveis> ';' 
                         | <Declaracoes_variaveis>'='<Declaracoes_variaveis> '+''('<Expressao_Divisao>')' ';'
                         
<Expressao_Multiplicao>::= <Declaracoes_variaveis>'='<Declaracoes_variaveis>'*'<Declaracoes_variaveis>
                        
<Expressao_Divisao>::= <Declaracoes_variaveis>'='<Declaracoes_variaveis>'/'<Declaracoes_variaveis>
                    
<Expressao_Incremento>::=<Declaracoes_variaveis>'++'';'
                       |<Declaracoes_variaveis>'=''+'<Declaracoes_variaveis>';'
                       
<Expressao_Decremento>::=<Declaracoes_variaveis>'--'';'
                       |<Declaracoes_variaveis>'=''-'<Declaracoes_variaveis> ';'  

                    
<Acesso>::= <Declaracoes_variaveis>'.'<conteudo_variavel>'=' <valor> ';'
         
<valor>::= <Expressao>
          |  integerNumber  
          |  
          
<Expressao_Boolean>::= <Declaracoes_variaveis>'=='<Declaracoes_variaveis>';'
                    | <Declaracoes_variaveis>'!='<Declaracoes_variaveis>';'     
                    
<ListaId>::=<Acesso>
          |

<ListaExepressao>::= <Expressao> 
           |<Expressao> ','<Expressao>  
           |<Expressao> ','<Expressao>','<Expressao> 
           |<comandosReturn>   
           
<comandosReturn> ::= <codigos_retornos>    
                               
<codigos_retornos>::= 'return' ';'
                   |'return' <Expressao> ';'
                   
<TipoPrimitivo>::='int'
            |'float'
            |'bool'
            |'string'

<Id_struct>::= 'struct' Identificador   
                    
<bloco_variavel>::= <Id_struct> '{'<Declaracoes_variaveis> '}' ';'
                 
<Id_Novo>::= 'typedef'Identificador
                 
<NovoTipo>::= <Id_Novo>'struct''{'<Declaracoes_variaveis> '}'';'
                  
<Acesso_struct> ::= <Id_struct> '.'<Declaracoes_variaveis>'='<valor>
                 
<Declaracoes_variaveis> ::= 'var' '{'<conteudo_variavel> '}'';'  
                         
<conteudo_variavel> ::= <TipoPrimitivo> Identificador',' <TipoPrimitivo> Identificador 
                     | <TipoPrimitivo> Identificador',' <TipoPrimitivo> Identificador ',' <TipoPrimitivo> Identificador',' 
                     | <TipoPrimitivo> Identificador
                         
<Declaracao_constantes>::='const''{'<conteudo_variavel>'}'';'  
                        
<codigosPrimitivos>::= <Id_struct>
                     | <Acesso> 
                     | <bloco_variavel>   
                     













