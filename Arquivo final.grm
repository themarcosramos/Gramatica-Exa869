!
! Propriedades
!

"Name"    = 'Problema 2'
"Version" = '1.0'
"Author"  = 'Gabriel, Gustavo, Ianc, Marcos, Joimar, Victor, Leandro'

"Case Sensitive" = 'True'
                 
"Start Symbol"   = <Programa>

{Id Head}        = {Letter} + [_]
{Id Tail}        = {Id Head} + {Digit}
          
{NoZeroNumber} = [123456789]




!Id = {Letter}({Letter}|'_'|{Digit})*
   
integerNumber = '-'?{Whitespace}*{Digit}{Digit}*
               
floatNumber = integerNumber'.'{Digit}+

StringLiteral = '"'({Letter} | {Whitespace} | '\' {Printable})* '"'

Id = {ID Head}{ID Tail}*


! -------------------------------------------------
!                          Comment Delimiters
! -------------------------------------------------

Comment Start = '/*'
Comment End = '*/'
Comment Line = '//'
             
! -------------------------------------------------
!                             All Elements
! -------------------------------------------------
   

<Boolean> ::= 'true' 
           | 'false'
       

<Origem> ::= 'var'
           | 'const'   
                              
<Tipo>   ::= 'int'
           | 'float'
           | 'double'
           | 'String'
           | Id

<TiposLiteral> ::= integerNumber
                | floatNumber
                | StringLiteral
                | <Variavel>
                | <Boolean>
!
! Uteis
!

<Variavel> ::= id <AcessoArray> <AcessoArray>
            
<AcessoArray> ::= '[' <NumeroOuVazio> ']'
             |
         
<NumeroOuVazio> ::= numero
          |   
<Variaveis> ::= id <VariaveisX>
             
<VariaveisX> ::= ',' <Variaveis>
              |


<numeroOuId> ::= integerNumber
              | Id


!
! Programa
!

<Programa>::= <EscopoGlobal><Start><FuncoesOuProcedimentos>

<EscopoGlobal> ::= <VarConstStruct><EscopoGlobalX>
                |
                
<EscopoGlobalX> ::= ',' <EscopoGlobal>
                 |
                
<VarConstStruct>::= <Var>
                 | <Const>
                 | <Struct>
!==============================================
! Declaração de variáveis, constantes e structs
!==============================================

<Const> ::= 'const' '{' <DeclararVariaveis> '}'

<Var> ::= 'var' '{' <DeclararVariaveis> '}'

<Struct> ::= 'struct' Id <structX>
          
<DeclararVariaveis> ::= <DeclararVariavel> <DeclararVariaveisX> ';'
             
<DeclararVariavel> ::= <Tipo> <DeclararVariavelX>
            
<SerieIdentificadores> ::= Id <AtribuirAVariavel> <SerieIdentificadoresX>
                                 
!----------------------------------------------------------------------------
! Estruturas auxiliares para a criacao de variaveis, constantes e structs
!-----------------------------------------------------------------------------
    <structX> ::= '{' <DeclararVariaveis> '}' 'typedef' id ';'
               | 'extends' id '{' <DeclararVariaveis> '}' 'typedef' id ';'
            
    <DeclararVariaveisX> ::= ',' <DeclararVariaveis>
                  | 

    <DeclararVariavelX> ::= <SerieIdentificadores>
                 | '[' <DeclararVariavelXX>

    <DeclararVariavelXX> ::= integerNumber <DeclararVariavelXXX>

    <DeclararVariavelXXX> ::= ']' <DeclararVariavelXXXX>

    <DeclararVariavelXXXX> ::= <SerieIdentificadores>
                | '[' integerNumber ']' <SerieIdentificadores>


    <SerieIdentificadoresX> ::= ',' <SerieIdentificadores>              
                             |
                             
<AtribuirAVariavel>::= '='  <Valoravel>
                    |
                        
    <DeclararVariavelX> ::= '[' <numeroOuId> ']'
                        |
                        
!=============
! Função start
!=============
<Start> ::= 'start' '{' <Bloco> '}'

    
!==============================
!Declaracao e chamada de funcao
!==============================

<Funcao> ::= 'function' <TipoRetorno> Id '(' <Parametros> ')' '{'  <BlocoRetorno> '}'
          
<TipoRetorno> ::= <Tipo><AcessoArray><AcessoArray>
            
<ChamadaFuncaoEProcedimento> ::= Id '(' <Variaveis> ')' ';'
            
!===========================
! Declaracao de Procedimento
!===========================

<Procedimento> ::= 'procedure' Id '(' <Parametros> ')' '{' <Bloco> '}'

!=======================
! Declarar varias Funcoes ou Procedimentos
!=======================

<FuncaoOuProcedimento> ::= <Funcao>
                        | <Procedimento>

<FuncoesOuProcedimentos> ::= <FuncaoOuProcedimento><FuncoesOuProcedimentos>
                          |

!--------------------------
! Utilidade da declaracao de funcao e procedimentos
!---------------------------

<Parametros> ::= <Parametro><ParametrosX>
              |
              
    <ParametrosX> ::= ',' <Parametros>
                   |

<Parametro> ::= <Tipo> Id
             
!FATORAR ISSO A ESQUERDA!!!!!!!!!!!
<Retorno> ::= 'return' Id 
          | 'return' integerNumber 
          |  'return' floatNumber 
          | 'return' string 
          | 'return' <boolean>
        

!=============
! Print e Scan
!=============

<Print> ::= 'print' '(' StringLiteral<PrintX>
              
    <PrintX> ::= ',' <Valoraveis> ')' ';'
              | ')' ';'
              
<Scan> ::= 'scan' '(' StringLiteral<ScanX>
        
    <ScanX> ::= ',' <Variaveis> ')' ';'
             | ')' ';'

!==============================================
! Operadores Relacionais, Lógicos e Aritméticos
!==============================================

<OperadoresRelacionais> ::= '!='
                         | '='<Igual>
                         | '<'<Igual>
                         | '>'<Igual>
                         
<Igual>::= '='
        |
        
<OperadoresLogicos> ::= '!'
                     | '&&'
                     | '||'
                     

<OperadoresAritmeticos> ::= '+'
                         | '-'
                         | '*'
                         | '/'
                         
<OperadoresIncrementos> ::= '++'
                      | '--'


<ExpressaoAritmetica> ::= <UnidadeAritmetica><OperadoresAritmeticos><UnidadeAritmetica>
                       | '(' <ExpressaoAritmetica> ')'                    
  
<UnidadeAritmetica> ::= Id
                     | integerNumber
                     | floatNumber
                     | <ChamadaFuncaoEProcedimento>
                     

<ExpressaoRelacional> ::= <UnidadeRelacional><OperadoresRelacionais><UnidadeRelacional>
                       | '(' <ExpressaoRelacional> ')' 
                       
<UnidadeRelacional> ::= <TiposLiteral>
                     | <ChamadaFuncaoEProcedimento>
                     | <ExpressaoAritmetica>

<ExpressaoLogica> ::= <UnidadeLogica><OperadoresLogicos><UnidadeLogica>
                   | '(' <ExpressaoLogica> ')'


<UnidadeLogica> ::= <Boolean>
                 | Id
                 | <ChamadaFuncaoEProcedimento>
                 | <ExpressaoRelacional>



!===========
! Comando if
!===========

<IfRetorno> ::= 'if' '(' <ExpressaoLogicaOuRelacional> ')' 'then' '{' <BlocoRetorno> '}' <Else>
      
<ElseRetorno>::= '{' <BlocoRetorno> '}'
       |
       
<If> ::= 'if' '(' <ExpressaoLogicaOuRelacional> ')' 'then' '{' <Bloco> '}' <Else>
      
<Else>::= '{' <Bloco> '}'
       |

<ExpressaoLogicaOuRelacional> ::= <ExpressaoLogica>
                      | <ExpressaoRelacional>

!==============
! Comando while
!==============

<WhileRetorno> ::= 'while' '(' <ExpressaoLogicaOuRelacional> ')' '{' <BlocoRetorno> '}'

<While> ::= 'while' '(' <ExpressaoLogicaOuRelacional> ')' '{' <Bloco> '}'
!===========
! Atribuicao
!===========

!atribuir funcao tbm
<Atribuicao> ::= Id <Atribuir> ';'
              

<Atribuir> ::= '=' <Valoravel>


<Valoravel> ::= <TiposLiteral>
             | <ExpressaoAritmetica>
             | <ChamadaFuncaoEProcedimento>
             | <ExpressaoLogica>
             | <ExpressaoRelacional>
             
<Valoraveis> ::= <Valoravel><ValoraveisX>
              
<ValoraveisX> ::= ',' <Valoraveis>
               |

!================================================
! Bloco Retorno
! Bloco para os procedimentos que aceitam retorno
!================================================

<BlocoRetorno> ::= <ComandosRetorno>
         
<ComandosRetorno> ::= <ComandoRetorno><ComandosRetorno>
            |
            
<ComandoRetorno> ::= <Var>
           | <Struct>
           | <Atribuicao>
           | <IfRetorno>
           | <WhileRetorno>
           | <ChamadaFuncaoEProcedimento>
           | <Retorno>
           |

!==================
! Bloco sem retorno
!==================

<Bloco> ::= <Comandos>
         
<Comandos> ::= <Comando><Comandos>
            |
            
<Comando> ::= <Var>
           | <Struct>
           | <Atribuicao>
           | <If>
           | <While>
           | <ChamadaFuncaoEProcedimento>
           |





